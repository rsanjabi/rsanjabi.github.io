{"results": [{"node": {"raw_sql": "WITH raw_costs AS (\n    SELECT * FROM {{ source('raw_data', 'raw_costs') }}\n),\n\nintermediate AS (\n    SELECT\n        rank                                            AS cost_rank,\n        living_idx,\n        rent_idx,\n        living_rent_idx,\n        groceries_idx,\n        restaurant_idx,\n        purch_power_idx,\n        SPLIT_PART(city, ',', 1)                        AS  costs_city_name,\n        SPLIT_PART(city, ',', -1)                       AS  costs_country_name,\n        UPPER(REGEXP_REPLACE(costs_city_name, ' ', '')) AS  standard_city,\n        city                                            AS  city_country_name\n    FROM raw_costs\n)\n\nSELECT * FROM intermediate", "database": "ANALYTICS", "schema": "MODEL", "fqn": ["short_term_rental", "staging", "stg_costs"], "unique_id": "model.short_term_rental.stg_costs", "package_name": "short_term_rental", "root_path": "/Users/rebecca/projects/sm_mentorship/airbnb/dbt", "path": "staging/stg_costs.sql", "original_file_path": "models/staging/stg_costs.sql", "name": "stg_costs", "resource_type": "model", "alias": "stg_costs", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "staging": "view", "mart": "view"}, "tags": [], "refs": [], "sources": [["raw_data", "raw_costs"]], "depends_on": {"macros": ["macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["source.short_term_rental.raw_data.raw_costs"]}, "description": "This model cleans up cost of living data.", "columns": {"cost_rank": {"name": "cost_rank", "description": "The ranking that the source gives each city from most expensive to least.", "meta": {}, "data_type": null, "tags": []}, "living_idx": {"name": "living_idx", "description": "", "meta": {}, "data_type": null, "tags": []}, "rent_idx": {"name": "rent_idx", "description": "", "meta": {}, "data_type": null, "tags": []}, "costs_city_name": {"name": "costs_city_name", "description": "", "meta": {}, "data_type": null, "tags": []}, "city_country_name": {"name": "city_country_name", "description": "", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/staging/staging.yml", "build_path": "target/run/short_term_rental/models/staging/stg_costs.sql", "compiled": true, "compiled_sql": "WITH raw_costs AS (\n    SELECT * FROM raw.loading.raw_costs\n),\n\nintermediate AS (\n    SELECT\n        rank                                            AS cost_rank,\n        living_idx,\n        rent_idx,\n        living_rent_idx,\n        groceries_idx,\n        restaurant_idx,\n        purch_power_idx,\n        SPLIT_PART(city, ',', 1)                        AS  costs_city_name,\n        SPLIT_PART(city, ',', -1)                       AS  costs_country_name,\n        UPPER(REGEXP_REPLACE(costs_city_name, ' ', '')) AS  standard_city,\n        city                                            AS  city_country_name\n    FROM raw_costs\n)\n\nSELECT * FROM intermediate", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH raw_costs AS (\n    SELECT * FROM raw.loading.raw_costs\n),\n\nintermediate AS (\n    SELECT\n        rank                                            AS cost_rank,\n        living_idx,\n        rent_idx,\n        living_rent_idx,\n        groceries_idx,\n        restaurant_idx,\n        purch_power_idx,\n        SPLIT_PART(city, ',', 1)                        AS  costs_city_name,\n        SPLIT_PART(city, ',', -1)                       AS  costs_country_name,\n        UPPER(REGEXP_REPLACE(costs_city_name, ' ', '')) AS  standard_city,\n        city                                            AS  city_country_name\n    FROM raw_costs\n)\n\nSELECT * FROM intermediate"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.474247932434082, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-05T02:22:37.104164Z", "completed_at": "2020-08-05T02:22:37.172929Z"}, {"name": "execute", "started_at": "2020-08-05T02:22:37.184836Z", "completed_at": "2020-08-05T02:22:39.333975Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH listings AS (\n    SELECT * FROM {{ source('raw_data', 'raw_listings') }}\n),\n\nintermediate AS (\n    SELECT\n        id                                          AS listing_id,\n        name                                        AS listing_name,\n        host_id,\n        host_name,\n        neighborhood_group,\n        neighborhood,\n        latitude                                    AS listing_lat,\n        longitude                                   AS listing_long,\n        roomt_type                                  AS room_type,\n        price,\n        min_nights,\n        number_of_reviews,\n        last_review,\n        reviews_per_month,\n        total_host_lis                              AS total_host_listings,\n        availability_365,\n        city                                        AS listing_city,\n        UPPER(REGEXP_REPLACE(city, ' ', ''))        AS standard_city,\n        scrape_date                                 AS listing_report_date\n\n    FROM listings\n)\n\nSELECT * FROM intermediate", "database": "ANALYTICS", "schema": "MODEL", "fqn": ["short_term_rental", "staging", "stg_listings"], "unique_id": "model.short_term_rental.stg_listings", "package_name": "short_term_rental", "root_path": "/Users/rebecca/projects/sm_mentorship/airbnb/dbt", "path": "staging/stg_listings.sql", "original_file_path": "models/staging/stg_listings.sql", "name": "stg_listings", "resource_type": "model", "alias": "stg_listings", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "staging": "view", "mart": "view"}, "tags": [], "refs": [], "sources": [["raw_data", "raw_listings"]], "depends_on": {"macros": ["macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["source.short_term_rental.raw_data.raw_listings"]}, "description": "This model cleans up Airbnb listing data.", "columns": {"listing_id": {"name": "listing_id", "description": "", "meta": {}, "data_type": null, "tags": []}, "listing_report_date": {"name": "listing_report_date", "description": "", "meta": {}, "data_type": null, "tags": []}, "listing_city": {"name": "listing_city", "description": "", "meta": {}, "data_type": null, "tags": []}, "room_type": {"name": "room_type", "description": "", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/staging/staging.yml", "build_path": "target/run/short_term_rental/models/staging/stg_listings.sql", "compiled": true, "compiled_sql": "WITH listings AS (\n    SELECT * FROM raw.loading.raw_listings\n),\n\nintermediate AS (\n    SELECT\n        id                                          AS listing_id,\n        name                                        AS listing_name,\n        host_id,\n        host_name,\n        neighborhood_group,\n        neighborhood,\n        latitude                                    AS listing_lat,\n        longitude                                   AS listing_long,\n        roomt_type                                  AS room_type,\n        price,\n        min_nights,\n        number_of_reviews,\n        last_review,\n        reviews_per_month,\n        total_host_lis                              AS total_host_listings,\n        availability_365,\n        city                                        AS listing_city,\n        UPPER(REGEXP_REPLACE(city, ' ', ''))        AS standard_city,\n        scrape_date                                 AS listing_report_date\n\n    FROM listings\n)\n\nSELECT * FROM intermediate", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH listings AS (\n    SELECT * FROM raw.loading.raw_listings\n),\n\nintermediate AS (\n    SELECT\n        id                                          AS listing_id,\n        name                                        AS listing_name,\n        host_id,\n        host_name,\n        neighborhood_group,\n        neighborhood,\n        latitude                                    AS listing_lat,\n        longitude                                   AS listing_long,\n        roomt_type                                  AS room_type,\n        price,\n        min_nights,\n        number_of_reviews,\n        last_review,\n        reviews_per_month,\n        total_host_lis                              AS total_host_listings,\n        availability_365,\n        city                                        AS listing_city,\n        UPPER(REGEXP_REPLACE(city, ' ', ''))        AS standard_city,\n        scrape_date                                 AS listing_report_date\n\n    FROM listings\n)\n\nSELECT * FROM intermediate"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.4405999183654785, "thread_id": "Thread-3", "timing": [{"name": "compile", "started_at": "2020-08-05T02:22:37.158370Z", "completed_at": "2020-08-05T02:22:37.246962Z"}, {"name": "execute", "started_at": "2020-08-05T02:22:37.270373Z", "completed_at": "2020-08-05T02:22:39.324066Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH cities AS (\n    SELECT * FROM {{ source('raw_data', 'raw_population') }}\n),\n\nintermediate AS (\n    SELECT\n        geonameid                                   AS geoname_id,\n        asciiname                                   AS pop_city_name,\n        UPPER(REGEXP_REPLACE(asciiname, ' ', ''))   AS standard_city,\n        country_code,\n        alternatenames                              AS alt_city_names,\n        latitude                                    AS city_lat,\n        longitude                                   AS city_long,\n        population,\n        elevation,\n        timezone,\n        modification_date                           AS pop_mod_date\n    FROM cities\n    WHERE\n        population IS NOT NULL\n        AND country_code IS NOT NULL\n)\n\nSELECT * FROM intermediate", "database": "ANALYTICS", "schema": "MODEL", "fqn": ["short_term_rental", "staging", "stg_population"], "unique_id": "model.short_term_rental.stg_population", "package_name": "short_term_rental", "root_path": "/Users/rebecca/projects/sm_mentorship/airbnb/dbt", "path": "staging/stg_population.sql", "original_file_path": "models/staging/stg_population.sql", "name": "stg_population", "resource_type": "model", "alias": "stg_population", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "staging": "view", "mart": "view"}, "tags": [], "refs": [], "sources": [["raw_data", "raw_population"]], "depends_on": {"macros": ["macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["source.short_term_rental.raw_data.raw_population"]}, "description": "This model cleans up city population data.", "columns": {"pop_city_name": {"name": "pop_city_name", "description": "", "meta": {}, "data_type": null, "tags": []}, "population": {"name": "population", "description": "", "meta": {}, "data_type": null, "tags": []}, "country_code": {"name": "country_code", "description": "", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/staging/staging.yml", "build_path": "target/run/short_term_rental/models/staging/stg_population.sql", "compiled": true, "compiled_sql": "WITH cities AS (\n    SELECT * FROM raw.loading.raw_population\n),\n\nintermediate AS (\n    SELECT\n        geonameid                                   AS geoname_id,\n        asciiname                                   AS pop_city_name,\n        UPPER(REGEXP_REPLACE(asciiname, ' ', ''))   AS standard_city,\n        country_code,\n        alternatenames                              AS alt_city_names,\n        latitude                                    AS city_lat,\n        longitude                                   AS city_long,\n        population,\n        elevation,\n        timezone,\n        modification_date                           AS pop_mod_date\n    FROM cities\n    WHERE\n        population IS NOT NULL\n        AND country_code IS NOT NULL\n)\n\nSELECT * FROM intermediate", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH cities AS (\n    SELECT * FROM raw.loading.raw_population\n),\n\nintermediate AS (\n    SELECT\n        geonameid                                   AS geoname_id,\n        asciiname                                   AS pop_city_name,\n        UPPER(REGEXP_REPLACE(asciiname, ' ', ''))   AS standard_city,\n        country_code,\n        alternatenames                              AS alt_city_names,\n        latitude                                    AS city_lat,\n        longitude                                   AS city_long,\n        population,\n        elevation,\n        timezone,\n        modification_date                           AS pop_mod_date\n    FROM cities\n    WHERE\n        population IS NOT NULL\n        AND country_code IS NOT NULL\n)\n\nSELECT * FROM intermediate"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.527632713317871, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2020-08-05T02:22:37.158118Z", "completed_at": "2020-08-05T02:22:37.190975Z"}, {"name": "execute", "started_at": "2020-08-05T02:22:37.213741Z", "completed_at": "2020-08-05T02:22:39.356226Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH pop_cities AS (\n    SELECT * FROM {{ ref('stg_population') }}\n),\n\ncost_cities AS (\n    SELECT * FROM {{ ref('stg_costs') }}\n),\n\nno_pop_dupes AS (\n    SELECT\n        standard_city,\n        geoname_id,\n        pop_city_name,\n        country_code,\n        alt_city_names,\n        city_lat,\n        city_long,\n        population,\n        elevation,\n        timezone,\n        pop_mod_date\n\n    FROM pop_cities\n    INNER JOIN (\n        SELECT\n            standard_city\n        FROM pop_cities\n        GROUP BY standard_city\n        HAVING count(*) = 1\n    )\n    USING (standard_city)\n),\n\nno_city_dupes AS (\n    SELECT\n        standard_city,\n        cost_rank,\n        living_idx,\n        rent_idx,\n        living_rent_idx,\n        groceries_idx,\n        restaurant_idx,\n        purch_power_idx,\n        costs_city_name,\n        costs_country_name,\n        city_country_name\n\n    FROM cost_cities\n    INNER JOIN (\n        SELECT\n            standard_city\n        FROM cost_cities\n        GROUP BY standard_city\n        HAVING count(*) = 1\n    )\n    USING (standard_city)\n),\n\ncities AS (\n    SELECT\n        standard_city,\n        cost_rank,\n        living_idx,\n        rent_idx,\n        living_rent_idx,\n        groceries_idx,\n        restaurant_idx,\n        purch_power_idx,\n        costs_city_name,\n        costs_country_name,\n        city_country_name,\n        geoname_id,\n        pop_city_name,\n        country_code,\n        alt_city_names,\n        city_lat,\n        city_long,\n        population,\n        elevation,\n        timezone,\n        pop_mod_date\n\n    FROM no_city_dupes\n    INNER JOIN no_pop_dupes\n        USING (standard_city)\n)\n\nSELECT * FROM cities", "database": "ANALYTICS", "schema": "MODEL", "fqn": ["short_term_rental", "mart", "dim_city"], "unique_id": "model.short_term_rental.dim_city", "package_name": "short_term_rental", "root_path": "/Users/rebecca/projects/sm_mentorship/airbnb/dbt", "path": "mart/dim_city.sql", "original_file_path": "models/mart/dim_city.sql", "name": "dim_city", "resource_type": "model", "alias": "dim_city", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "staging": "view", "mart": "view"}, "tags": [], "refs": [["stg_population"], ["stg_costs"]], "sources": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs"], "nodes": ["model.short_term_rental.stg_population", "model.short_term_rental.stg_costs"]}, "description": "This dimension holds data relevant to specific cities.", "columns": {"standard_city": {"name": "standard_city", "description": "", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/mart/mart.yml", "build_path": "target/run/short_term_rental/models/mart/dim_city.sql", "compiled": true, "compiled_sql": "\n\nWITH pop_cities AS (\n    SELECT * FROM ANALYTICS.MODEL.stg_population\n),\n\ncost_cities AS (\n    SELECT * FROM ANALYTICS.MODEL.stg_costs\n),\n\nno_pop_dupes AS (\n    SELECT\n        standard_city,\n        geoname_id,\n        pop_city_name,\n        country_code,\n        alt_city_names,\n        city_lat,\n        city_long,\n        population,\n        elevation,\n        timezone,\n        pop_mod_date\n\n    FROM pop_cities\n    INNER JOIN (\n        SELECT\n            standard_city\n        FROM pop_cities\n        GROUP BY standard_city\n        HAVING count(*) = 1\n    )\n    USING (standard_city)\n),\n\nno_city_dupes AS (\n    SELECT\n        standard_city,\n        cost_rank,\n        living_idx,\n        rent_idx,\n        living_rent_idx,\n        groceries_idx,\n        restaurant_idx,\n        purch_power_idx,\n        costs_city_name,\n        costs_country_name,\n        city_country_name\n\n    FROM cost_cities\n    INNER JOIN (\n        SELECT\n            standard_city\n        FROM cost_cities\n        GROUP BY standard_city\n        HAVING count(*) = 1\n    )\n    USING (standard_city)\n),\n\ncities AS (\n    SELECT\n        standard_city,\n        cost_rank,\n        living_idx,\n        rent_idx,\n        living_rent_idx,\n        groceries_idx,\n        restaurant_idx,\n        purch_power_idx,\n        costs_city_name,\n        costs_country_name,\n        city_country_name,\n        geoname_id,\n        pop_city_name,\n        country_code,\n        alt_city_names,\n        city_lat,\n        city_long,\n        population,\n        elevation,\n        timezone,\n        pop_mod_date\n\n    FROM no_city_dupes\n    INNER JOIN no_pop_dupes\n        USING (standard_city)\n)\n\nSELECT * FROM cities", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nWITH pop_cities AS (\n    SELECT * FROM ANALYTICS.MODEL.stg_population\n),\n\ncost_cities AS (\n    SELECT * FROM ANALYTICS.MODEL.stg_costs\n),\n\nno_pop_dupes AS (\n    SELECT\n        standard_city,\n        geoname_id,\n        pop_city_name,\n        country_code,\n        alt_city_names,\n        city_lat,\n        city_long,\n        population,\n        elevation,\n        timezone,\n        pop_mod_date\n\n    FROM pop_cities\n    INNER JOIN (\n        SELECT\n            standard_city\n        FROM pop_cities\n        GROUP BY standard_city\n        HAVING count(*) = 1\n    )\n    USING (standard_city)\n),\n\nno_city_dupes AS (\n    SELECT\n        standard_city,\n        cost_rank,\n        living_idx,\n        rent_idx,\n        living_rent_idx,\n        groceries_idx,\n        restaurant_idx,\n        purch_power_idx,\n        costs_city_name,\n        costs_country_name,\n        city_country_name\n\n    FROM cost_cities\n    INNER JOIN (\n        SELECT\n            standard_city\n        FROM cost_cities\n        GROUP BY standard_city\n        HAVING count(*) = 1\n    )\n    USING (standard_city)\n),\n\ncities AS (\n    SELECT\n        standard_city,\n        cost_rank,\n        living_idx,\n        rent_idx,\n        living_rent_idx,\n        groceries_idx,\n        restaurant_idx,\n        purch_power_idx,\n        costs_city_name,\n        costs_country_name,\n        city_country_name,\n        geoname_id,\n        pop_city_name,\n        country_code,\n        alt_city_names,\n        city_lat,\n        city_long,\n        population,\n        elevation,\n        timezone,\n        pop_mod_date\n\n    FROM no_city_dupes\n    INNER JOIN no_pop_dupes\n        USING (standard_city)\n)\n\nSELECT * FROM cities"}, "error": null, "status": "SUCCESS 1", "execution_time": 3.3666930198669434, "thread_id": "Thread-4", "timing": [{"name": "compile", "started_at": "2020-08-05T02:22:39.647297Z", "completed_at": "2020-08-05T02:22:39.683219Z"}, {"name": "execute", "started_at": "2020-08-05T02:22:39.684106Z", "completed_at": "2020-08-05T02:22:42.757900Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH listings AS (\n    SELECT * FROM {{ ref('stg_listings') }}\n),\n\navail_cities AS (\n    SELECT * FROM {{ ref('dim_city') }}\n),\n\navail_listings AS (\n    SELECT \n        {{ dbt_utils.surrogate_key(\n            ['listings.listing_id',\n             'listings.listing_report_date']) }}                AS listing_snapshot_key,\n        listings.listing_id,\n        listings.listing_name,\n        listings.host_id,\n        listings.host_name,\n        listings.neighborhood_group,\n        listings.neighborhood,\n        listings.listing_lat,\n        listings.listing_long,\n        listings.room_type,\n        listings.price,\n        listings.min_nights,\n        listings.number_of_reviews,\n        listings.last_review,\n        listings.reviews_per_month,\n        listings.total_host_listings,\n        listings.availability_365,\n        listings.listing_city,\n        listings.standard_city,\n        listings.listing_report_date\n    FROM listings\n    INNER JOIN avail_cities\n    USING (standard_city)\n)\n\nSELECT * FROM avail_listings", "database": "ANALYTICS", "schema": "MODEL", "fqn": ["short_term_rental", "mart", "all_available_listings"], "unique_id": "model.short_term_rental.all_available_listings", "package_name": "short_term_rental", "root_path": "/Users/rebecca/projects/sm_mentorship/airbnb/dbt", "path": "mart/all_available_listings.sql", "original_file_path": "models/mart/all_available_listings.sql", "name": "all_available_listings", "resource_type": "model", "alias": "all_available_listings", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "staging": "view", "mart": "view"}, "tags": [], "refs": [["stg_listings"], ["dim_city"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.surrogate_key", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs"], "nodes": ["model.short_term_rental.stg_listings", "model.short_term_rental.dim_city"]}, "description": "This fact table models the listing for a given month, and associated monthly data.", "columns": {"listing_snapshot_key": {"name": "listing_snapshot_key", "description": "", "meta": {}, "data_type": null, "tags": []}, "availability_365": {"name": "availability_365", "description": "", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/mart/mart.yml", "build_path": "target/run/short_term_rental/models/mart/all_available_listings.sql", "compiled": true, "compiled_sql": "\n\nWITH listings AS (\n    SELECT * FROM ANALYTICS.MODEL.stg_listings\n),\n\navail_cities AS (\n    SELECT * FROM ANALYTICS.MODEL.dim_city\n),\n\navail_listings AS (\n    SELECT \n        md5(cast(\n    \n    coalesce(cast(listings.listing_id as \n    varchar\n), '') || '-' || coalesce(cast(listings.listing_report_date as \n    varchar\n), '')\n\n as \n    varchar\n))                AS listing_snapshot_key,\n        listings.listing_id,\n        listings.listing_name,\n        listings.host_id,\n        listings.host_name,\n        listings.neighborhood_group,\n        listings.neighborhood,\n        listings.listing_lat,\n        listings.listing_long,\n        listings.room_type,\n        listings.price,\n        listings.min_nights,\n        listings.number_of_reviews,\n        listings.last_review,\n        listings.reviews_per_month,\n        listings.total_host_listings,\n        listings.availability_365,\n        listings.listing_city,\n        listings.standard_city,\n        listings.listing_report_date\n    FROM listings\n    INNER JOIN avail_cities\n    USING (standard_city)\n)\n\nSELECT * FROM avail_listings", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nWITH listings AS (\n    SELECT * FROM ANALYTICS.MODEL.stg_listings\n),\n\navail_cities AS (\n    SELECT * FROM ANALYTICS.MODEL.dim_city\n),\n\navail_listings AS (\n    SELECT \n        md5(cast(\n    \n    coalesce(cast(listings.listing_id as \n    varchar\n), '') || '-' || coalesce(cast(listings.listing_report_date as \n    varchar\n), '')\n\n as \n    varchar\n))                AS listing_snapshot_key,\n        listings.listing_id,\n        listings.listing_name,\n        listings.host_id,\n        listings.host_name,\n        listings.neighborhood_group,\n        listings.neighborhood,\n        listings.listing_lat,\n        listings.listing_long,\n        listings.room_type,\n        listings.price,\n        listings.min_nights,\n        listings.number_of_reviews,\n        listings.last_review,\n        listings.reviews_per_month,\n        listings.total_host_listings,\n        listings.availability_365,\n        listings.listing_city,\n        listings.standard_city,\n        listings.listing_report_date\n    FROM listings\n    INNER JOIN avail_cities\n    USING (standard_city)\n)\n\nSELECT * FROM avail_listings"}, "error": null, "status": "SUCCESS 1", "execution_time": 24.186620950698853, "thread_id": "Thread-3", "timing": [{"name": "compile", "started_at": "2020-08-05T02:22:43.018268Z", "completed_at": "2020-08-05T02:22:43.054118Z"}, {"name": "execute", "started_at": "2020-08-05T02:22:43.056487Z", "completed_at": "2020-08-05T02:23:06.963618Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH all_listings AS (\n    SELECT * FROM {{ ref('all_available_listings') }}\n),\n\nflags AS (\n    SELECT \n        {{ dbt_utils.surrogate_key(\n            ['listing_id', 'listing_report_date'])}}            AS listing_snapshot_key,\n\n        -- High availablity means available more than 95 days per year\n        CASE WHEN (availability_365 > 95)\n             THEN True\n             ELSE False END                                     AS high_avail_flag,\n\n        -- Multi host means they have more than 1 listing\n        CASE WHEN (total_host_listings > 1)\n             THEN True\n             ELSE False END                                     AS multi_host_flag,\n\n        -- Home flag means that the listing is for an entire home or apt.\n        CASE WHEN (room_type = 'Entire home/apt')\n             THEN True\n             ELSE False END                                     AS home_flag,\n\n        -- Frequently booked means it has had a review in last 6 months (from report date)\n        -- AND (the number of reviews * minimum stay) annualized is > than 95 days\n        CASE WHEN (listing_report_date < DATEADD(month, 6, last_review)\n                       AND (min_nights*reviews_per_month*12)>95)\n             THEN True\n             ELSE False END                                     AS freq_book_flag\n\n    FROM all_listings\n)\n\nSELECT * FROM flags", "database": "ANALYTICS", "schema": "MODEL", "fqn": ["short_term_rental", "mart", "analytics", "analytics_flagged"], "unique_id": "model.short_term_rental.analytics_flagged", "package_name": "short_term_rental", "root_path": "/Users/rebecca/projects/sm_mentorship/airbnb/dbt", "path": "mart/analytics/analytics_flagged.sql", "original_file_path": "models/mart/analytics/analytics_flagged.sql", "name": "analytics_flagged", "resource_type": "model", "alias": "analytics_flagged", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "staging": "view", "mart": "view"}, "tags": [], "refs": [["all_available_listings"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.surrogate_key", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs"], "nodes": ["model.short_term_rental.all_available_listings"]}, "description": "This dimension holds pre-calcuated values for the fct_listing_snapshot table.", "columns": {"listing_snapshot_key": {"name": "listing_snapshot_key", "description": "", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/mart/analytics/analytics.yml", "build_path": "target/run/short_term_rental/models/mart/analytics/analytics_flagged.sql", "compiled": true, "compiled_sql": "\n\nWITH all_listings AS (\n    SELECT * FROM ANALYTICS.MODEL.all_available_listings\n),\n\nflags AS (\n    SELECT \n        md5(cast(\n    \n    coalesce(cast(listing_id as \n    varchar\n), '') || '-' || coalesce(cast(listing_report_date as \n    varchar\n), '')\n\n as \n    varchar\n))            AS listing_snapshot_key,\n\n        -- High availablity means available more than 95 days per year\n        CASE WHEN (availability_365 > 95)\n             THEN True\n             ELSE False END                                     AS high_avail_flag,\n\n        -- Multi host means they have more than 1 listing\n        CASE WHEN (total_host_listings > 1)\n             THEN True\n             ELSE False END                                     AS multi_host_flag,\n\n        -- Home flag means that the listing is for an entire home or apt.\n        CASE WHEN (room_type = 'Entire home/apt')\n             THEN True\n             ELSE False END                                     AS home_flag,\n\n        -- Frequently booked means it has had a review in last 6 months (from report date)\n        -- AND (the number of reviews * minimum stay) annualized is > than 95 days\n        CASE WHEN (listing_report_date < DATEADD(month, 6, last_review)\n                       AND (min_nights*reviews_per_month*12)>95)\n             THEN True\n             ELSE False END                                     AS freq_book_flag\n\n    FROM all_listings\n)\n\nSELECT * FROM flags", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nWITH all_listings AS (\n    SELECT * FROM ANALYTICS.MODEL.all_available_listings\n),\n\nflags AS (\n    SELECT \n        md5(cast(\n    \n    coalesce(cast(listing_id as \n    varchar\n), '') || '-' || coalesce(cast(listing_report_date as \n    varchar\n), '')\n\n as \n    varchar\n))            AS listing_snapshot_key,\n\n        -- High availablity means available more than 95 days per year\n        CASE WHEN (availability_365 > 95)\n             THEN True\n             ELSE False END                                     AS high_avail_flag,\n\n        -- Multi host means they have more than 1 listing\n        CASE WHEN (total_host_listings > 1)\n             THEN True\n             ELSE False END                                     AS multi_host_flag,\n\n        -- Home flag means that the listing is for an entire home or apt.\n        CASE WHEN (room_type = 'Entire home/apt')\n             THEN True\n             ELSE False END                                     AS home_flag,\n\n        -- Frequently booked means it has had a review in last 6 months (from report date)\n        -- AND (the number of reviews * minimum stay) annualized is > than 95 days\n        CASE WHEN (listing_report_date < DATEADD(month, 6, last_review)\n                       AND (min_nights*reviews_per_month*12)>95)\n             THEN True\n             ELSE False END                                     AS freq_book_flag\n\n    FROM all_listings\n)\n\nSELECT * FROM flags"}, "error": null, "status": "SUCCESS 1", "execution_time": 19.336370944976807, "thread_id": "Thread-4", "timing": [{"name": "compile", "started_at": "2020-08-05T02:23:07.266383Z", "completed_at": "2020-08-05T02:23:07.338480Z"}, {"name": "execute", "started_at": "2020-08-05T02:23:07.340101Z", "completed_at": "2020-08-05T02:23:26.315640Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH listings AS (\n    SELECT * FROM {{ ref('all_available_listings') }}\n),\n\nfact_snapshot AS (\n    SELECT \n        {{ dbt_utils.surrogate_key(\n            ['listing_id', 'listing_report_date']) }} AS listing_snapshot_key,\n        listing_id,\n        listing_report_date,\n        standard_city,\n        price,\n        min_nights,\n        number_of_reviews,\n        last_review,\n        reviews_per_month,\n        total_host_listings,\n        availability_365\n    FROM listings\n)\n\nSELECT * FROM fact_snapshot", "database": "ANALYTICS", "schema": "MODEL", "fqn": ["short_term_rental", "mart", "fct_listing_snapshot"], "unique_id": "model.short_term_rental.fct_listing_snapshot", "package_name": "short_term_rental", "root_path": "/Users/rebecca/projects/sm_mentorship/airbnb/dbt", "path": "mart/fct_listing_snapshot.sql", "original_file_path": "models/mart/fct_listing_snapshot.sql", "name": "fct_listing_snapshot", "resource_type": "model", "alias": "fct_listing_snapshot", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "staging": "view", "mart": "view"}, "tags": [], "refs": [["all_available_listings"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.surrogate_key", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs"], "nodes": ["model.short_term_rental.all_available_listings"]}, "description": "This fact table models the listing for a given month, and associated monthly data.", "columns": {"listing_snapshot_key": {"name": "listing_snapshot_key", "description": "", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/mart/mart.yml", "build_path": "target/run/short_term_rental/models/mart/fct_listing_snapshot.sql", "compiled": true, "compiled_sql": "\n\nWITH listings AS (\n    SELECT * FROM ANALYTICS.MODEL.all_available_listings\n),\n\nfact_snapshot AS (\n    SELECT \n        md5(cast(\n    \n    coalesce(cast(listing_id as \n    varchar\n), '') || '-' || coalesce(cast(listing_report_date as \n    varchar\n), '')\n\n as \n    varchar\n)) AS listing_snapshot_key,\n        listing_id,\n        listing_report_date,\n        standard_city,\n        price,\n        min_nights,\n        number_of_reviews,\n        last_review,\n        reviews_per_month,\n        total_host_listings,\n        availability_365\n    FROM listings\n)\n\nSELECT * FROM fact_snapshot", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nWITH listings AS (\n    SELECT * FROM ANALYTICS.MODEL.all_available_listings\n),\n\nfact_snapshot AS (\n    SELECT \n        md5(cast(\n    \n    coalesce(cast(listing_id as \n    varchar\n), '') || '-' || coalesce(cast(listing_report_date as \n    varchar\n), '')\n\n as \n    varchar\n)) AS listing_snapshot_key,\n        listing_id,\n        listing_report_date,\n        standard_city,\n        price,\n        min_nights,\n        number_of_reviews,\n        last_review,\n        reviews_per_month,\n        total_host_listings,\n        availability_365\n    FROM listings\n)\n\nSELECT * FROM fact_snapshot"}, "error": null, "status": "SUCCESS 1", "execution_time": 29.355467081069946, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-08-05T02:23:07.218267Z", "completed_at": "2020-08-05T02:23:07.281652Z"}, {"name": "execute", "started_at": "2020-08-05T02:23:07.301335Z", "completed_at": "2020-08-05T02:23:36.307338Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH listings AS (\n    SELECT * FROM {{ ref('all_available_listings') }}\n),\n\nmost_recent_listing_info AS (\n    SELECT\n        l1.listing_id,\n        l1.listing_name,\n        l1.host_name,\n        l1.host_id,\n        l1.standard_city,\n        l1.neighborhood_group,\n        l1.neighborhood,\n        l1.listing_lat,\n        l1.listing_long,\n        l1.room_type\n    FROM listings AS l1\n    LEFT OUTER JOIN listings AS l2\n        ON (l1.listing_id = l2.listing_id\n            AND l1.listing_report_date > l2.listing_report_date)\n    WHERE l2.listing_id IS NULL\n)\n\nSELECT * FROM most_recent_listing_info", "database": "ANALYTICS", "schema": "MODEL", "fqn": ["short_term_rental", "mart", "dim_listing"], "unique_id": "model.short_term_rental.dim_listing", "package_name": "short_term_rental", "root_path": "/Users/rebecca/projects/sm_mentorship/airbnb/dbt", "path": "mart/dim_listing.sql", "original_file_path": "models/mart/dim_listing.sql", "name": "dim_listing", "resource_type": "model", "alias": "dim_listing", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "staging": "view", "mart": "view"}, "tags": [], "refs": [["all_available_listings"]], "sources": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs"], "nodes": ["model.short_term_rental.all_available_listings"]}, "description": "This dimension holds data relevant to a specific listing. The data is unlikely to change over time.", "columns": {"listing_id": {"name": "listing_id", "description": "", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/mart/mart.yml", "build_path": "target/run/short_term_rental/models/mart/dim_listing.sql", "compiled": true, "compiled_sql": "\n\nWITH listings AS (\n    SELECT * FROM ANALYTICS.MODEL.all_available_listings\n),\n\nmost_recent_listing_info AS (\n    SELECT\n        l1.listing_id,\n        l1.listing_name,\n        l1.host_name,\n        l1.host_id,\n        l1.standard_city,\n        l1.neighborhood_group,\n        l1.neighborhood,\n        l1.listing_lat,\n        l1.listing_long,\n        l1.room_type\n    FROM listings AS l1\n    LEFT OUTER JOIN listings AS l2\n        ON (l1.listing_id = l2.listing_id\n            AND l1.listing_report_date > l2.listing_report_date)\n    WHERE l2.listing_id IS NULL\n)\n\nSELECT * FROM most_recent_listing_info", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nWITH listings AS (\n    SELECT * FROM ANALYTICS.MODEL.all_available_listings\n),\n\nmost_recent_listing_info AS (\n    SELECT\n        l1.listing_id,\n        l1.listing_name,\n        l1.host_name,\n        l1.host_id,\n        l1.standard_city,\n        l1.neighborhood_group,\n        l1.neighborhood,\n        l1.listing_lat,\n        l1.listing_long,\n        l1.room_type\n    FROM listings AS l1\n    LEFT OUTER JOIN listings AS l2\n        ON (l1.listing_id = l2.listing_id\n            AND l1.listing_report_date > l2.listing_report_date)\n    WHERE l2.listing_id IS NULL\n)\n\nSELECT * FROM most_recent_listing_info"}, "error": null, "status": "SUCCESS 1", "execution_time": 30.036929845809937, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2020-08-05T02:23:07.266554Z", "completed_at": "2020-08-05T02:23:07.330480Z"}, {"name": "execute", "started_at": "2020-08-05T02:23:07.332197Z", "completed_at": "2020-08-05T02:23:36.948425Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "WITH all_listings AS (\n    SELECT * FROM {{ ref('fct_listing_snapshot') }}\n),\n\nmost_recent_listings AS (\n\n    SELECT\n        listing_id,\n        listing_snapshot_key,\n        standard_city,\n        price,\n        min_nights\n    FROM all_listings\n    WHERE  listing_report_date > dateadd(month, -12, getdate())\n    QUALIFY RANK() OVER (PARTITION BY listing_id\n                            ORDER BY listing_report_date DESC) = 1\n\n)\n\nSELECT * FROM most_recent_listings", "database": "ANALYTICS", "schema": "MODEL", "fqn": ["short_term_rental", "mart", "analytics", "analytics_most_recent_listings"], "unique_id": "model.short_term_rental.analytics_most_recent_listings", "package_name": "short_term_rental", "root_path": "/Users/rebecca/projects/sm_mentorship/airbnb/dbt", "path": "mart/analytics/analytics_most_recent_listings.sql", "original_file_path": "models/mart/analytics/analytics_most_recent_listings.sql", "name": "analytics_most_recent_listings", "resource_type": "model", "alias": "analytics_most_recent_listings", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "staging": "view", "mart": "view"}, "tags": [], "refs": [["fct_listing_snapshot"]], "sources": [], "depends_on": {"macros": ["macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.short_term_rental.fct_listing_snapshot"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/short_term_rental/models/mart/analytics/analytics_most_recent_listings.sql", "compiled": true, "compiled_sql": "WITH all_listings AS (\n    SELECT * FROM ANALYTICS.MODEL.fct_listing_snapshot\n),\n\nmost_recent_listings AS (\n\n    SELECT\n        listing_id,\n        listing_snapshot_key,\n        standard_city,\n        price,\n        min_nights\n    FROM all_listings\n    WHERE  listing_report_date > dateadd(month, -12, getdate())\n    QUALIFY RANK() OVER (PARTITION BY listing_id\n                            ORDER BY listing_report_date DESC) = 1\n\n)\n\nSELECT * FROM most_recent_listings", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "WITH all_listings AS (\n    SELECT * FROM ANALYTICS.MODEL.fct_listing_snapshot\n),\n\nmost_recent_listings AS (\n\n    SELECT\n        listing_id,\n        listing_snapshot_key,\n        standard_city,\n        price,\n        min_nights\n    FROM all_listings\n    WHERE  listing_report_date > dateadd(month, -12, getdate())\n    QUALIFY RANK() OVER (PARTITION BY listing_id\n                            ORDER BY listing_report_date DESC) = 1\n\n)\n\nSELECT * FROM most_recent_listings"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.1966631412506104, "thread_id": "Thread-3", "timing": [{"name": "compile", "started_at": "2020-08-05T02:23:36.570553Z", "completed_at": "2020-08-05T02:23:36.587828Z"}, {"name": "execute", "started_at": "2020-08-05T02:23:36.588277Z", "completed_at": "2020-08-05T02:23:38.513007Z"}], "fail": null, "warn": null, "skip": false}], "generated_at": "2020-08-05T02:23:40.269371Z", "elapsed_time": 67.85386300086975}